
trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '1.2.3'
  displayName: Instalacion Terraform

- task: TerraformCLI@0
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    allowTelemetryCollection: true
  displayName: Terraform init
  continueOnError: true
- task: TerraformCLI@0
  inputs:
    command: 'plan'
    environmentServiceName: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    runAzLogin: true
    commandOptions: '-var ssh_key="$SSH_KEY"'
    allowTelemetryCollection: true
  displayName: Terraform plan
  continueOnError: true
- task: TerraformCLI@0
  inputs:
    command: 'import'
    environmentServiceName: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    runAzLogin: true
    commandOptions: '-var ssh_key="$SSH_KEY"'
    allowTelemetryCollection: true
    resourceAddress: 'module.cluster.azurerm_resource_group.aks-getting-started'
    resourceId: '/subscriptions/9909fced-8203-44b6-af68-11f833a37e60/resourceGroups/aks-getting-started'
  continueOnError: true
  displayName: Terraform import
  
- task: TerraformCLI@0
  inputs:
    command: 'apply'
    environmentServiceName: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    runAzLogin: true
    #commandOptions: '-var ssh_key="$SSH_KEY"'
    allowTelemetryCollection: true
  displayName: Terraform apply
  continueOnError: true

- task: UseRubyVersion@0
  displayName: 'Install Ruby'
  inputs:
    versionSpec: '>= 2.5'
    addToPath: true 

- script: gem install inspec-bin
  displayName: 'Install inspec-bin' 

- task: Bash@3
  displayName: 'Run inspec tests'
  inputs:
    targetType: inline
    script: |
            export AZURE_SUBSCRIPTION_ID="$(SUBSCRIPTION_ID)"
            export AZURE_CLIENT_ID="$(CLIENT_ID)"
            export AZURE_CLIENT_SECRET="$(CLIENTE_SECRET)"
            export AZURE_TENANT_ID="$(TENANT_ID)"
            inspec init profile --platform azure azure-inspec-tests --chef-license=accept
            inspec exec ./azure-inspec-tests/ -t azure:// --chef-license=accept --reporter cli junit:inspectestresults.xml
    
- task: PublishTestResults@2
  displayName: Publish inspec test results
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/inspectestresults.xml'
    mergeTestResults: true